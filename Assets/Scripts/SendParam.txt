Сервер получает от игрока(клиента):

1. Move axis 			(это параметры WASD (1, -1, -1, 1). В случае, если игрок играет на джостике по идее должны передаваться в виде 0.0f). На данный момент 						можно оставить как есть. 
2. MouseAxis 			(параметры вектора передвижения мышки за время между отправкой пакетов).

3. Кнопки:
 - LookCameraRotate состояние 	(GetKey держим или нет)
 - swapMode нажатие 		(GetKeyDown)
 - jump 			GetKeyDown 
 - crouch состояния 		(GetKeyDown нажата | GetKeyUp отжата)
 - sprint состояния 		(GetKeyDown нажата | GetKeyUp отжата)
 - weapon_1 			GetKeyDown 
 - weapon_2 			GetKeyDown 
 - object_1 			GetKeyDown 
 - object_2 			GetKeyDown 
 - attack 			GetKey (держим или нет)
 - reloadGun 			(GetKeyDown)
 - useObject 			(GetKeyDown) + данные об объекте использования (id на сцене)
 - useGrenade 			(GetKeyDown)
 - skill_1 			(??? на данный момент не известно)
 - skill_2 			(???)

4. Rotate CameraBlock (кватарнион x,y,z,w) (для синхронизации камеры и прицела у игрока и на сервере) + Rotate кисти руки(направление оружия)
Возможно вышеуказанный параметр передавать не стоит(если логика поворота камеры будет считаться на сервере за счет mouse Axis)
(все float или аналог с запятой)

Получаем от сервера на клиенте:
Transform игрока:
 - Позиция игрока (Vector 3(x,y,z)) 	(все float или аналог с запятой)
 - Кватарнион игрока (x,y,z,w) 		(все float или аналог с запятой)
 - Rotate CameraBlock			(все float или аналог с запятой)
 - Velocity игрока (x,y,z)		(все float или аналог с запятой)

Параметры игрока: 
 - HealPoint				(int или аналог)
 - Shield Point				(int или аналог)
 - State (idle mode, combat mode, sprint mode) (возможно это лишнее, тк логику этих состояний будет отрабатывать сервер, а клиенту это нужно только для UI)

Параметры модуля оружия (получаем при совершении игроком определенных действий): 
 - количество патронов в магазине (после выстрела или смены оружия) 			(int или аналог)
 - выстрел + вектор выстрела (для отрисовки снаряда) (после выстрела)			(x,y,z) (все float или аналог с запятой)
 - point куда попал выстрел для отрисовки системы частиц (после попадания выстрела)	(x,y,z) (все float или аналог с запятой)
 - выбранное оружие (+ данные в аниматор UI о том, какое оружие было выбранно после нажатия weapon_1|2)

Animator parametrs:
 - Вес слоев аниматора (четыре слоя каждый имеет вес от 0 до 1)

 - Speed (от 0 до 2.5f)
 - RunRotate (от -1 до 1)
 - MoveRight (-1 до 1)
 - Velocity_Y (бесконечно, но чаще всего в рамках от -15 до 15)
 - Crouch (boolian (можно изменить на 0 | 1 ))
 - Jump (Trigger Срабатывает один раз после определенных обработок (например игрок нажал прыжок, мы отправили в аниматор триггер jump, что даст команду аниматору единично отыграть анимацию прыжка))
 - isGrounded (bool, можно заменить на 0 1)
 - breakRun триггер
 - FlipAfterJump триггер
 - UseWeapon bool 
 - GetWeapon триггер
 - OutWeapon триггер
 - reloadgun триггер
 - StepRight bool 
 - StepLeft bool 
 - Punch [1], [2], [3]
	
Предметы вокруг игрока (только во время изменения физики или состояния (например объект двинулся или был кем то использован))
Transform vector3
Rotate кватарнион 
Animator параметр (скорее всего триггер)

Враги и другие персонажи находящиеся на сцене:
Визуальный контроллер врага (его позиция, поворот, состояние аниматора(у игроков аналогично персонажу, у монстров проще(параметры пока-что точно не известны)) + направление взгляда (прицеливания))
Параметры врага (его здоровье, уровень, награда и прочее)

Общее состояние сцены:
 - Время